/****************************************************************************
**
** Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
** Contact: Qt Software Information (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License versions 2.0 or 3.0 as published by the Free
** Software Foundation and appearing in the file LICENSE.GPL included in
** the packaging of this file.  Please review the following information
** to ensure GNU General Public Licensing requirements will be met:
** http://www.fsf.org/licensing/licenses/info/GPLv2.html and
** http://www.gnu.org/copyleft/gpl.html.  In addition, as a special
** exception, Nokia gives you certain additional rights. These rights
** are described in the Nokia Qt GPL Exception version 1.3, included in
** the file GPL_EXCEPTION.txt in this package.
**
** Qt for Windows(R) Licensees
** As a special exception, Nokia, as the sole copyright holder for Qt
** Designer, grants users of the Qt/Eclipse Integration plug-in the
** right for the Qt/Eclipse Integration to link to functionality
** provided by Qt Designer and its related libraries.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
**
****************************************************************************/

/*!
    \example widgets/digitalclock
    \title Digital Clock Example

    The Digital Clock example shows how to use QLCDNumber to display a 
    number with LCD-like digits.

    \image digitalclock-example.png Screenshot of the Digital Clock example

    This example also demonstrates how QTimer can be used to update a widget
    at regular intervals.

    \section1 DigitalClock Class Definition

    The \c DigitalClock class provides a clock widget showing the time with
    hours and minutes separated by a blinking colon. We subclass QLCDNumber
    and implement a private slot called \c showTime() to update the clock
    display:

    \snippet examples/widgets/digitalclock/digitalclock.h 0

    \section1 DigitalClock Class Implementation

    \snippet examples/widgets/digitalclock/digitalclock.cpp 0

    In the constructor, we first change the look of the LCD numbers. The
    QLCDNumber::Filled style produces raised segments filled with the
    foreground color (typically black). We also set up a one-second timer
    to keep track of the current time, and we connect
    its \l{QTimer::timeout()}{timeout()} signal to the private \c showTime() slot
    so that the display is updated every second. Then, we
    call the \c showTime() slot; without this call, there would be a one-second
    delay at startup before the time is shown.

    \snippet examples/widgets/digitalclock/digitalclock.cpp 1
    \snippet examples/widgets/digitalclock/digitalclock.cpp 2

    The \c showTime() slot is called whenever the clock display needs
    to be updated.

    The current time is converted into a string with the format "hh:mm".
    When QTime::second() is a even number, the colon in the string is
    replaced with a space. This makes the colon appear and vanish every
    other second.

    Finally, we call QLCDNumber::display() to update the widget.
*/
