/****************************************************************************
**
** Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
** Contact: Qt Software Information (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License versions 2.0 or 3.0 as published by the Free
** Software Foundation and appearing in the file LICENSE.GPL included in
** the packaging of this file.  Please review the following information
** to ensure GNU General Public Licensing requirements will be met:
** http://www.fsf.org/licensing/licenses/info/GPLv2.html and
** http://www.gnu.org/copyleft/gpl.html.  In addition, as a special
** exception, Nokia gives you certain additional rights. These rights
** are described in the Nokia Qt GPL Exception version 1.3, included in
** the file GPL_EXCEPTION.txt in this package.
**
** Qt for Windows(R) Licensees
** As a special exception, Nokia, as the sole copyright holder for Qt
** Designer, grants users of the Qt/Eclipse Integration plug-in the
** right for the Qt/Eclipse Integration to link to functionality
** provided by Qt Designer and its related libraries.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
**
****************************************************************************/

/*!
    \page winsystem.html
    \title Window System Specific Notes
    \ingroup buildsystem
    \ingroup deployment

    Qt is a cross-platform GUI toolkit, so almost the entire API is the
    same on all platforms and window systems. If you wish to use
    platform-specific features, and still maintain a platform-independent
    source tree, you should protect the platform-specific code using the
    appropriate \c{#ifdef} directives (see below).

    Qt provides a few low-level global functions for fine-tuning
    applications on specific platforms. See \l{Special-Purpose Global
    Functions Exported by Qt} for details.

    \tableofcontents

    For information about which platforms are supported by Qt, see the
    \l{Platform Notes}. For information on distributing Qt applications, see
    \l{Deploying Qt Applications}.

    \target x11
    \section1 Qt for X11

    When compiling for this platform, the macro \c{Q_WS_X11} is defined.

    \e{Not documented here. Please contact Qt's technical support team
    if you have queries.}

    See the \l{Qt for X11 Requirements} page for more information about the
    libraries required to build Qt with as many features as possible.

    \target win
    \section1 Qt for Windows

    When compiling for this platform, the macro \c{Q_WS_WIN} is defined.

    \e{Not documented here. Please contact Qt's technical support team
    if you have queries.}

    \target macosx
    \section1 Qt for Mac OS X

    When compiling for this platform, the macro \c{Q_WS_MAC} is defined.

    \list
    \i \l{Qt for Mac OS X - Specific Issues}
    \i \l{Qt is Mac OS X Native}
    \endlist

    \target qws
    \section1 Qt for Embedded Linux

    When compiling for this platform, the macro \c{Q_WS_QWS} is
    defined (the window system is literally the Qt Window System). See
    the \l{Qt for Embedded Linux} documentation for more information.
*/
