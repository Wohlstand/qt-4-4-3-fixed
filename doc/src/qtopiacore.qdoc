/****************************************************************************
**
** Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
** Contact: Qt Software Information (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** Commercial Usage
** Licensees holding valid Qt Commercial licenses may use this file in
** accordance with the Qt Commercial License Agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Nokia.
**
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License versions 2.0 or 3.0 as published by the Free
** Software Foundation and appearing in the file LICENSE.GPL included in
** the packaging of this file.  Please review the following information
** to ensure GNU General Public Licensing requirements will be met:
** http://www.fsf.org/licensing/licenses/info/GPLv2.html and
** http://www.gnu.org/copyleft/gpl.html.  In addition, as a special
** exception, Nokia gives you certain additional rights. These rights
** are described in the Nokia Qt GPL Exception version 1.3, included in
** the file GPL_EXCEPTION.txt in this package.
**
** Qt for Windows(R) Licensees
** As a special exception, Nokia, as the sole copyright holder for Qt
** Designer, grants users of the Qt/Eclipse Integration plug-in the
** right for the Qt/Eclipse Integration to link to functionality
** provided by Qt Designer and its related libraries.
**
** If you are unsure which license is appropriate for your use, please
** contact the sales department at qt-sales@nokia.com.
**
****************************************************************************/

/*!
    \group qt-embedded
    \ingroup topics
    \title Qt for Embedded Linux
    \brief Documents specifically about Qt for Embedded Linux.

    Qt for Embedded Linux is a C++ framework for GUI and application development
    for embedded devices. It runs on a variety of processors, usually
    with Embedded Linux.  Qt for Embedded Linux provides the standard Qt API for
    embedded devices with a lightweight window system.

    \image qt-embedded-architecture.png

    Qt for Embedded Linux applications write directly to the framebuffer,
    eliminating the need for the X Window System and saving memory.
    The Linux framebuffer is enabled by default on all modern Linux
    distributions. For information on older versions, see \l
    http://en.tldp.org/HOWTO/Framebuffer-HOWTO.html. For development
    and debugging purposes, Qt for Embedded Linux provides a \l {The
    Virtual Framebuffer}{virtual framebuffer}. It is also possible to
    run an application using the
    \l{The VNC Protocol and Qt for Embedded Linux}{VNC protocol}.

    \table 100%
    \header \o Getting Started \o Reference \o Features
    \row
    \o
     \list
        \o \l {Qt for Embedded Linux Architecture}{Architecture Overview}
        \o \l {Installing Qt for Embedded Linux}{Installation}
        \o \l {Running Qt for Embedded Linux Applications}{Running Applications}
        \o \l {Qt Examples#Qt for Embedded Linux}{Examples}
    \endlist
    \o
    \list
        \o \l {Qt for Embedded Linux Classes}{Classes}
        \o \l {Qt for Embedded Linux Environment Variables}{Environment Variables}
        \o \l {Licenses for Fonts Used in Qt for Embedded Linux}{Font Licenses}
    \endlist
    \o
    \list
        \o \l {Qt for Embedded Linux Pointer Handling}{Pointer Handling}
        \o \l {Qt for Embedded Linux Character Input}{Character Input}
        \o \l {Qt for Embedded Linux Display Management}{Display Management}
        \o \l {Qt for Embedded Linux and OpenGL}{OpenGL}
        \o \l {Qt for Embedded Linux Fonts}{Fonts}
    \endlist

    \header \o Development \o Porting \o Optimization
    \row
    \o
     \list
        \o \l {The Virtual Framebuffer}{Virtual Framebuffer}
        \o \l {The VNC Protocol and Qt for Embedded Linux}{VNC Protocol}
        \o \l {Testing the Linux Framebuffer}
        \o \l {Cross Compiling Qt for Embedded Linux Applications}{Cross Compiling Applications}
        \o \l {Deploying Qt for Embedded Linux Applications}{Deploying Applications}
    \endlist
    \o
    \list
        \o \l {Porting Qt Applications to Qt for Embedded Linux}
        \o \l {Porting Qt for Embedded Linux to a New Architecture}
        \o \l {Porting Qt for Embedded Linux to Another Operating System}
    \endlist
    \o
    \list
        \o \l {Qt for Embedded Linux Performance Tuning}{Performance Tuning}
        \o \l {Fine-Tuning Features in Qt for Embedded Linux}{Fine-Tuning Features}
        \o \l {Adding an Accelerated Graphics Driver to Qt for Embedded Linux}{Adding an Accelerated Graphics Driver}
    \endlist
    \endtable
*/
